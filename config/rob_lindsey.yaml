# name: is the name of the topic to monitor
# signal_when: optional, can be either 'not published' or 'published'. Respectively, it will send a warning when the topic is not published or when it is.
# signal_lambdas: optional, it's a list of (pythonic) lambda expressions such that when they are satisfied a warning is sent
# timeout: optional (default=0), amount of time (in seconds) for which the signal has to be satisfied before sending the warning.

- name : '/scan'
  signal_when : 'not published'

- name : '/head_xtion/rgb/image_color'
  signal_when : 'not published'

- name : '/head_xtion/depth/image_rect'
  signal_when : 'not published'

- name : '/tf'
  signal_when : 'not published'

- name : '/robot_pose'
  signal_when : 'not published'

- name : '/odom'
  signal_when : 'not published'

- name : '/battery_state'
  signal_when : 'not published'
  signal_lambdas :
    - 'lambda msg : msg.lifePercent < 10'
    - 'lambda msg : msg.lifePercent < 5'

- name : '/motor_status'
  signal_when : 'not published'
  signal_lambdas :
    - 'lambda msg : msg.emergency_button_pressed == True'
    - 'lambda msg : msg.emergency_button_pressed == False'
  timeout : 5

- name : '/motor_status'
  signal_lambdas :
    - 'lambda msg : msg.bumper_pressed == True'
  timeout : 60

#- name : '/virtual_bumper_event'
#  signal_lambdas :
#    - 'lambda msg : msg.freeRunStarted == True'

- name : '/diagnostics_toplevel_state'
  signal_when : 'not published'
  signal_lambdas :
    - 'lambda msg : msg.level == 1'
    - 'lambda msg : msg.level == 2'
  timeout : 3

#- name : '/interface/buttonPressedWhileDisabled'
#  signal_when : 'published'
